{"version":3,"file":"static/js/691.b3909104.chunk.js","mappings":"sSACaA,EAAaC,EAAAA,EAAAA,GAAH,qEAIVC,EAAaD,EAAAA,EAAAA,GAAH,0C,SC2EvB,EAzEe,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAE2BC,EAAAA,EAAAA,IAAA,6IACiHL,IAH5I,OAEUM,EAFV,OAMIC,EAAUD,EAASE,KAAKC,SAN5B,wGAHc,sBACA,KAAVT,GADU,mCAYdU,EACD,GAAE,CAACV,IAEJ,IAaMO,EAAY,SAAAC,GAChB,GAAoB,IAAhBA,EAAKG,OAAT,CAOA,IAAMC,EAAQJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,MAA0B,CAC/CD,GAAAA,EACAE,KAFqB,EAAcA,KAGnCD,MAAOA,EAHc,IAKvBnB,EAAUgB,EANT,MALCK,IAAAA,OAAAA,QACE,kEAWL,EAED,OACE,4BACE,kBAAMC,SA/BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACf,GAAkC,KAA9BD,EAAKE,SAASvB,MAAMwB,MAEtB,OADAP,IAAAA,OAAAA,QAAwB,2BACjBlB,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,MAAOqB,EAAKE,SAASvB,MAAMwB,QAC7CH,EAAKI,QACL7B,EAAU,GACX,EAoBG,WACE,kBACE8B,KAAK,OACLV,KAAK,QACLW,YAAY,mBACZC,aAAa,SAEf,mBAAQF,KAAK,SAAb,wBAEF,SAACnC,EAAD,UACGI,EAAOkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMD,EAAb,EAAaA,MAAb,OACV,SAACtB,EAAD,WACE,SAAC,KAAD,CAAMoC,GAAE,UAAKf,GAAMgB,MAAO,CAAEC,KAAM7B,GAAlC,UACE,eAAI8B,MAAO,CAAEC,SAAU,IAAvB,SAA8BjB,GAAQD,OAFzBD,EADP,QAUnB,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\nexport const MoviesItem = styled.li`\n  display: flex;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { MoviesList, MoviesItem } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    if (query === '') return;\n\n    async function getMoviesArrayByName() {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=bac142108808b211e4312acd17e6d409&language=en-US&page=1&include_adult=false&query=${query}`\n        );\n\n        onResolve(response.data.results);\n      } catch (error) {}\n    }\n    getMoviesArrayByName();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    if (form.elements.query.value === '') {\n      Notiflix.Notify.failure('Pleace enter movie name');\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n    setMovies([]);\n  };\n\n  const onResolve = data => {\n    if (data.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no movies your search query. Please try again.'\n      );\n\n      return;\n    }\n    const movie = data.map(({ id, title, name }) => ({\n      id,\n      name,\n      title: title,\n    }));\n    setMovies(movie);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Enter movie name\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList>\n        {movies.map(({ id, name, title }) => (\n          <MoviesItem key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <h2 style={{ fontSize: 10 }}>{name || title}</h2>\n            </Link>\n          </MoviesItem>\n        ))}\n      </MoviesList>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["MoviesList","styled","MoviesItem","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","axios","response","onResolve","data","results","getMoviesArrayByName","length","movie","map","id","title","name","Notiflix","onSubmit","e","preventDefault","form","target","elements","value","reset","type","placeholder","autoComplete","to","state","from","style","fontSize"],"sourceRoot":""}