{"version":3,"file":"static/js/681.588b55bc.chunk.js","mappings":"yNAiDA,UA7Ce,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BC,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4EAF3B,OAEUI,EAFV,OAKIC,EAAUD,EAASE,KAAKC,SAL5B,wGADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACR,IAEJ,IAAMK,EAAY,SAAAI,GAChB,IAAMC,EAAaD,EAASE,KAAI,kBAA8B,CAC5DC,GAD8B,EAAGA,GAEjCC,OAF8B,EAAOA,OAGrCC,QAH8B,EAAeA,QAAf,IAKhCf,EAAUW,EACX,EAED,OACE,8BACqB,IAAlBZ,EAAOiB,QACN,sEAEA,yBACGjB,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,0BACE,yBACE,2BACE,uBAAID,KACJ,uBAAIC,UAJAF,EADA,OAcrB,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Review = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function getReviewById() {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=bac142108808b211e4312acd17e6d409&language=en-US&page=1`\n        );\n        onResolve(response.data.results);\n      } catch (error) {}\n    }\n    getReviewById();\n  }, [movieId]);\n\n  const onResolve = responce => {\n    const moviReview = responce.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n    setReview(moviReview);\n  };\n\n  return (\n    <>\n      {review.length === 0 ? (\n        <p>We don't have any reviews for this movies</p>\n      ) : (\n        <div>\n          {review.map(({ id, author, content }) => (\n            <div key={id}>\n              <ul>\n                <li>\n                  <p>{author}</p>\n                  <p>{content}</p>\n                </li>\n              </ul>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\nexport default Review;\n"],"names":["useState","review","setReview","movieId","useParams","useEffect","axios","response","onResolve","data","results","getReviewById","responce","moviReview","map","id","author","content","length"],"sourceRoot":""}